#!/usr/bin/env python

Import("env")
Import("env_modules")

env_gothic = env_modules.Clone()

env_gothic.add_source_files(env.modules_sources, "*.cpp")
if env.editor_build:
    env_gothic.add_source_files(env.modules_sources, "editor/*.cpp")

physfs_obj = []

physfs_dir = "#thirdparty/physfs/"
physfs_sources = [
    "physfs.c",
    "physfs_archiver_dir.c",
    "physfs_archiver_unpacked.c",
    "physfs_archiver_vdf.c",
    "physfs_byteorder.c",
    "physfs_platform_posix.c",
    "physfs_platform_unix.c",
    "physfs_platform_apple.m",
    "physfs_platform_windows.c",
    "physfs_unicode.c",
]
physfs_sources = [physfs_dir + file for file in physfs_sources]

env_gothic.Prepend(CPPPATH=[physfs_dir])

env_physfs = env.Clone()
env_physfs.Prepend(CPPDEFINES=[
    ("PHYSFS_SUPPORTS_ZIP", 0),
    ("PHYSFS_SUPPORTS_7Z", 0),
    ("PHYSFS_SUPPORTS_GRP", 0),
    ("PHYSFS_SUPPORTS_QPAK", 0),
    ("PHYSFS_SUPPORTS_HOG", 0),
    ("PHYSFS_SUPPORTS_MVL", 0),
    ("PHYSFS_SUPPORTS_WAD", 0),
    ("PHYSFS_SUPPORTS_SLB", 0),
    ("PHYSFS_SUPPORTS_ISO9660", 0),
])
env_physfs.disable_warnings()
env_physfs.add_source_files(physfs_obj, physfs_sources)
env.modules_sources += physfs_obj
